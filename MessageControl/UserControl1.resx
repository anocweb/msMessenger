<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAA7xJREFUWEft
        mMkvPEEUx+dvHNvYI/aDk4twIIyIREJIOFjCgQPiJE5CHHAQ+0lsIfY19m26+lffajXp7nkzVTX9kzg4
        fBDmvfp0VderV0KxWIz9ZqSgHQD28PDAzs/P2fHxseDy8pI9Pz8HzStIS/Du7o5tbm6yrq4uq7CwkIXD
        YZuiqqrKGhkZYXt7e+zx8ZHMpcJEkN3f37PGxsakQqnIzMxkkMXMfn19UflJtASfnp5YfX09xNKSc5OV
        lQVRi0tqTYxScH5+3iooKAgs5qeiosI6PDxUSqYU7O/vZxkZGVpyWMLKykoBnyWL+oyfvLw8Njc3l1Iy
        qWBPT49SrKSkxJqcnBQz8fHxEY/lP4uNMTo6yiBBxUqw5DMzM0klScGBgQGlXEtLC7u9vU359ODk5MSu
        ra1NmS87O5stLy+TuTyC2F1LS0tYVjKRpK6ujr29vSnlJNj9paWlKSXz8/PZzc1NQk6PIK9VFp6GSuCC
        TKQCrwGRywMe4vPz05PbLShLCRks6e3tNZb7BrNI5nTDlxolKB4XF+TvilIO4BSRwaYsLi4qx0DVQN2V
        MXHBtrY2ZWnA8pu8e35wZuuULcyijBGCV1dXCFIGRiIRlJO0BV9eXlAjlePwMxzvoogJYUDsXOqDfnJz
        c+339/eEgXXhgqh7ZG4/eOUQE0It6+7u1hLEDHLBQDOIE4fK7QeThpgQ+reysjKtICzP6+tr2oLX19dk
        XorBwUFHcGNjQ0tOcnZ2lrbg1NSU9lgNDQ2O4MLCgpFgZ2cnAo0l0V7xd1h7rPLyckdwdnZWq/Nwg3Lh
        F1BxenpqNBF4GMSFeL9nFAimp6fjdUqX1tZWo3HQgyIutLKyYiyIgn1xcaE9i+vr68ZjVFdXO4L7+/sI
        Nk7Q1NRk6RRt3PaKi4uN8zc3NzuCuCLW1NQYJwBoVv1Cfjo6OtLKPTY25giieA4NDRlvFIAH8wu5wQyr
        estkrK2tOYL8CzOthSAnJ8ceHx9XLjFvbsl4BaI/QLwQ5I2qtiA2SF9fn6clUsFrLXYlmY8CfamMjbdb
        uFRTH5agTZqYmBDtlsnFW4LuBPUzGo0qJ2NnZydR8LvlIgPQTOhckHThJcpub28nx+N3E3RMiYL4Pjw8
        7AlCE7G9vf3fxNxgFVZXV5n7fzvYULu7u57x3IKi1ysqKhIfxlVRvqg/ydHREeP3azEmrrI4s91/9wiC
        g4MDccyYnBRB2draYmgOqMKfIAjQI/p/95NguXHiUH8jBX8Tf4JB+RMMyi8XjNn/AJAp5eVqPLaPAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>